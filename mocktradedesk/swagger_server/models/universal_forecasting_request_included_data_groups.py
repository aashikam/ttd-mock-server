# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class UniversalForecastingRequestIncludedDataGroups(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, advertiser_id: str=None, data_group_name: str=None):  # noqa: E501
        """UniversalForecastingRequestIncludedDataGroups - a model defined in Swagger

        :param advertiser_id: The advertiser_id of this UniversalForecastingRequestIncludedDataGroups.  # noqa: E501
        :type advertiser_id: str
        :param data_group_name: The data_group_name of this UniversalForecastingRequestIncludedDataGroups.  # noqa: E501
        :type data_group_name: str
        """
        self.swagger_types = {
            'advertiser_id': str,
            'data_group_name': str
        }

        self.attribute_map = {
            'advertiser_id': 'AdvertiserId',
            'data_group_name': 'DataGroupName'
        }
        self._advertiser_id = advertiser_id
        self._data_group_name = data_group_name

    @classmethod
    def from_dict(cls, dikt) -> 'UniversalForecastingRequestIncludedDataGroups':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UniversalForecastingRequest_IncludedDataGroups of this UniversalForecastingRequestIncludedDataGroups.  # noqa: E501
        :rtype: UniversalForecastingRequestIncludedDataGroups
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advertiser_id(self) -> str:
        """Gets the advertiser_id of this UniversalForecastingRequestIncludedDataGroups.


        :return: The advertiser_id of this UniversalForecastingRequestIncludedDataGroups.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id: str):
        """Sets the advertiser_id of this UniversalForecastingRequestIncludedDataGroups.


        :param advertiser_id: The advertiser_id of this UniversalForecastingRequestIncludedDataGroups.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def data_group_name(self) -> str:
        """Gets the data_group_name of this UniversalForecastingRequestIncludedDataGroups.


        :return: The data_group_name of this UniversalForecastingRequestIncludedDataGroups.
        :rtype: str
        """
        return self._data_group_name

    @data_group_name.setter
    def data_group_name(self, data_group_name: str):
        """Sets the data_group_name of this UniversalForecastingRequestIncludedDataGroups.


        :param data_group_name: The data_group_name of this UniversalForecastingRequestIncludedDataGroups.
        :type data_group_name: str
        """

        self._data_group_name = data_group_name
