# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class FirstPartyAdvertiserResponseLookAlikeModelDetails(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, last_generation_date_utc: datetime=None, last_request_date_utc: datetime=None, look_alike_model_build_status: str=None, look_alike_model_result_status: str=None, look_alike_model_eligibility: str=None):  # noqa: E501
        """FirstPartyAdvertiserResponseLookAlikeModelDetails - a model defined in Swagger

        :param last_generation_date_utc: The last_generation_date_utc of this FirstPartyAdvertiserResponseLookAlikeModelDetails.  # noqa: E501
        :type last_generation_date_utc: datetime
        :param last_request_date_utc: The last_request_date_utc of this FirstPartyAdvertiserResponseLookAlikeModelDetails.  # noqa: E501
        :type last_request_date_utc: datetime
        :param look_alike_model_build_status: The look_alike_model_build_status of this FirstPartyAdvertiserResponseLookAlikeModelDetails.  # noqa: E501
        :type look_alike_model_build_status: str
        :param look_alike_model_result_status: The look_alike_model_result_status of this FirstPartyAdvertiserResponseLookAlikeModelDetails.  # noqa: E501
        :type look_alike_model_result_status: str
        :param look_alike_model_eligibility: The look_alike_model_eligibility of this FirstPartyAdvertiserResponseLookAlikeModelDetails.  # noqa: E501
        :type look_alike_model_eligibility: str
        """
        self.swagger_types = {
            'last_generation_date_utc': datetime,
            'last_request_date_utc': datetime,
            'look_alike_model_build_status': str,
            'look_alike_model_result_status': str,
            'look_alike_model_eligibility': str
        }

        self.attribute_map = {
            'last_generation_date_utc': 'LastGenerationDateUTC',
            'last_request_date_utc': 'LastRequestDateUTC',
            'look_alike_model_build_status': 'LookAlikeModelBuildStatus',
            'look_alike_model_result_status': 'LookAlikeModelResultStatus',
            'look_alike_model_eligibility': 'LookAlikeModelEligibility'
        }
        self._last_generation_date_utc = last_generation_date_utc
        self._last_request_date_utc = last_request_date_utc
        self._look_alike_model_build_status = look_alike_model_build_status
        self._look_alike_model_result_status = look_alike_model_result_status
        self._look_alike_model_eligibility = look_alike_model_eligibility

    @classmethod
    def from_dict(cls, dikt) -> 'FirstPartyAdvertiserResponseLookAlikeModelDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FirstPartyAdvertiserResponse_LookAlikeModelDetails of this FirstPartyAdvertiserResponseLookAlikeModelDetails.  # noqa: E501
        :rtype: FirstPartyAdvertiserResponseLookAlikeModelDetails
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_generation_date_utc(self) -> datetime:
        """Gets the last_generation_date_utc of this FirstPartyAdvertiserResponseLookAlikeModelDetails.


        :return: The last_generation_date_utc of this FirstPartyAdvertiserResponseLookAlikeModelDetails.
        :rtype: datetime
        """
        return self._last_generation_date_utc

    @last_generation_date_utc.setter
    def last_generation_date_utc(self, last_generation_date_utc: datetime):
        """Sets the last_generation_date_utc of this FirstPartyAdvertiserResponseLookAlikeModelDetails.


        :param last_generation_date_utc: The last_generation_date_utc of this FirstPartyAdvertiserResponseLookAlikeModelDetails.
        :type last_generation_date_utc: datetime
        """

        self._last_generation_date_utc = last_generation_date_utc

    @property
    def last_request_date_utc(self) -> datetime:
        """Gets the last_request_date_utc of this FirstPartyAdvertiserResponseLookAlikeModelDetails.


        :return: The last_request_date_utc of this FirstPartyAdvertiserResponseLookAlikeModelDetails.
        :rtype: datetime
        """
        return self._last_request_date_utc

    @last_request_date_utc.setter
    def last_request_date_utc(self, last_request_date_utc: datetime):
        """Sets the last_request_date_utc of this FirstPartyAdvertiserResponseLookAlikeModelDetails.


        :param last_request_date_utc: The last_request_date_utc of this FirstPartyAdvertiserResponseLookAlikeModelDetails.
        :type last_request_date_utc: datetime
        """

        self._last_request_date_utc = last_request_date_utc

    @property
    def look_alike_model_build_status(self) -> str:
        """Gets the look_alike_model_build_status of this FirstPartyAdvertiserResponseLookAlikeModelDetails.


        :return: The look_alike_model_build_status of this FirstPartyAdvertiserResponseLookAlikeModelDetails.
        :rtype: str
        """
        return self._look_alike_model_build_status

    @look_alike_model_build_status.setter
    def look_alike_model_build_status(self, look_alike_model_build_status: str):
        """Sets the look_alike_model_build_status of this FirstPartyAdvertiserResponseLookAlikeModelDetails.


        :param look_alike_model_build_status: The look_alike_model_build_status of this FirstPartyAdvertiserResponseLookAlikeModelDetails.
        :type look_alike_model_build_status: str
        """
        allowed_values = ["NotRequested", "Queued", "Built"]  # noqa: E501
        if look_alike_model_build_status not in allowed_values:
            raise ValueError(
                "Invalid value for `look_alike_model_build_status` ({0}), must be one of {1}"
                .format(look_alike_model_build_status, allowed_values)
            )

        self._look_alike_model_build_status = look_alike_model_build_status

    @property
    def look_alike_model_result_status(self) -> str:
        """Gets the look_alike_model_result_status of this FirstPartyAdvertiserResponseLookAlikeModelDetails.


        :return: The look_alike_model_result_status of this FirstPartyAdvertiserResponseLookAlikeModelDetails.
        :rtype: str
        """
        return self._look_alike_model_result_status

    @look_alike_model_result_status.setter
    def look_alike_model_result_status(self, look_alike_model_result_status: str):
        """Sets the look_alike_model_result_status of this FirstPartyAdvertiserResponseLookAlikeModelDetails.


        :param look_alike_model_result_status: The look_alike_model_result_status of this FirstPartyAdvertiserResponseLookAlikeModelDetails.
        :type look_alike_model_result_status: str
        """
        allowed_values = ["NoResults", "Ready"]  # noqa: E501
        if look_alike_model_result_status not in allowed_values:
            raise ValueError(
                "Invalid value for `look_alike_model_result_status` ({0}), must be one of {1}"
                .format(look_alike_model_result_status, allowed_values)
            )

        self._look_alike_model_result_status = look_alike_model_result_status

    @property
    def look_alike_model_eligibility(self) -> str:
        """Gets the look_alike_model_eligibility of this FirstPartyAdvertiserResponseLookAlikeModelDetails.


        :return: The look_alike_model_eligibility of this FirstPartyAdvertiserResponseLookAlikeModelDetails.
        :rtype: str
        """
        return self._look_alike_model_eligibility

    @look_alike_model_eligibility.setter
    def look_alike_model_eligibility(self, look_alike_model_eligibility: str):
        """Sets the look_alike_model_eligibility of this FirstPartyAdvertiserResponseLookAlikeModelDetails.


        :param look_alike_model_eligibility: The look_alike_model_eligibility of this FirstPartyAdvertiserResponseLookAlikeModelDetails.
        :type look_alike_model_eligibility: str
        """
        allowed_values = ["Eligible", "NotEligible"]  # noqa: E501
        if look_alike_model_eligibility not in allowed_values:
            raise ValueError(
                "Invalid value for `look_alike_model_eligibility` ({0}), must be one of {1}"
                .format(look_alike_model_eligibility, allowed_values)
            )

        self._look_alike_model_eligibility = look_alike_model_eligibility
