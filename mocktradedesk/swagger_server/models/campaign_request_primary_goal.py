# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class CampaignRequestPrimaryGoal(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, goal_type: str=None, amount: float=None, currency_code: str=None):  # noqa: E501
        """CampaignRequestPrimaryGoal - a model defined in Swagger

        :param goal_type: The goal_type of this CampaignRequestPrimaryGoal.  # noqa: E501
        :type goal_type: str
        :param amount: The amount of this CampaignRequestPrimaryGoal.  # noqa: E501
        :type amount: float
        :param currency_code: The currency_code of this CampaignRequestPrimaryGoal.  # noqa: E501
        :type currency_code: str
        """
        self.swagger_types = {
            'goal_type': str,
            'amount': float,
            'currency_code': str
        }

        self.attribute_map = {
            'goal_type': 'GoalType',
            'amount': 'Amount',
            'currency_code': 'CurrencyCode'
        }
        self._goal_type = goal_type
        self._amount = amount
        self._currency_code = currency_code

    @classmethod
    def from_dict(cls, dikt) -> 'CampaignRequestPrimaryGoal':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CampaignRequest_PrimaryGoal of this CampaignRequestPrimaryGoal.  # noqa: E501
        :rtype: CampaignRequestPrimaryGoal
        """
        return util.deserialize_model(dikt, cls)

    @property
    def goal_type(self) -> str:
        """Gets the goal_type of this CampaignRequestPrimaryGoal.

        The campaign's primary goal.  # noqa: E501

        :return: The goal_type of this CampaignRequestPrimaryGoal.
        :rtype: str
        """
        return self._goal_type

    @goal_type.setter
    def goal_type(self, goal_type: str):
        """Sets the goal_type of this CampaignRequestPrimaryGoal.

        The campaign's primary goal.  # noqa: E501

        :param goal_type: The goal_type of this CampaignRequestPrimaryGoal.
        :type goal_type: str
        """
        allowed_values = ["Awareness", "Consideration", "Conversion"]  # noqa: E501
        if goal_type not in allowed_values:
            raise ValueError(
                "Invalid value for `goal_type` ({0}), must be one of {1}"
                .format(goal_type, allowed_values)
            )

        self._goal_type = goal_type

    @property
    def amount(self) -> float:
        """Gets the amount of this CampaignRequestPrimaryGoal.

        The money amount associated with the primary goal.  # noqa: E501

        :return: The amount of this CampaignRequestPrimaryGoal.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount: float):
        """Sets the amount of this CampaignRequestPrimaryGoal.

        The money amount associated with the primary goal.  # noqa: E501

        :param amount: The amount of this CampaignRequestPrimaryGoal.
        :type amount: float
        """

        self._amount = amount

    @property
    def currency_code(self) -> str:
        """Gets the currency_code of this CampaignRequestPrimaryGoal.

        The currency code for the primary goal amount.  # noqa: E501

        :return: The currency_code of this CampaignRequestPrimaryGoal.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code: str):
        """Sets the currency_code of this CampaignRequestPrimaryGoal.

        The currency code for the primary goal amount.  # noqa: E501

        :param currency_code: The currency_code of this CampaignRequestPrimaryGoal.
        :type currency_code: str
        """

        self._currency_code = currency_code
