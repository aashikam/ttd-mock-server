# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.advertiser_overview_response_ad_groups import AdvertiserOverviewResponseAdGroups  # noqa: F401,E501
from swagger_server import util


class AdvertiserOverviewResponseCampaigns(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, campaign_id: str=None, campaign_name: str=None, description: str=None, start_date_utc: datetime=None, end_date_utc: datetime=None, availability: str=None, ad_groups: List[AdvertiserOverviewResponseAdGroups]=None):  # noqa: E501
        """AdvertiserOverviewResponseCampaigns - a model defined in Swagger

        :param campaign_id: The campaign_id of this AdvertiserOverviewResponseCampaigns.  # noqa: E501
        :type campaign_id: str
        :param campaign_name: The campaign_name of this AdvertiserOverviewResponseCampaigns.  # noqa: E501
        :type campaign_name: str
        :param description: The description of this AdvertiserOverviewResponseCampaigns.  # noqa: E501
        :type description: str
        :param start_date_utc: The start_date_utc of this AdvertiserOverviewResponseCampaigns.  # noqa: E501
        :type start_date_utc: datetime
        :param end_date_utc: The end_date_utc of this AdvertiserOverviewResponseCampaigns.  # noqa: E501
        :type end_date_utc: datetime
        :param availability: The availability of this AdvertiserOverviewResponseCampaigns.  # noqa: E501
        :type availability: str
        :param ad_groups: The ad_groups of this AdvertiserOverviewResponseCampaigns.  # noqa: E501
        :type ad_groups: List[AdvertiserOverviewResponseAdGroups]
        """
        self.swagger_types = {
            'campaign_id': str,
            'campaign_name': str,
            'description': str,
            'start_date_utc': datetime,
            'end_date_utc': datetime,
            'availability': str,
            'ad_groups': List[AdvertiserOverviewResponseAdGroups]
        }

        self.attribute_map = {
            'campaign_id': 'CampaignId',
            'campaign_name': 'CampaignName',
            'description': 'Description',
            'start_date_utc': 'StartDateUTC',
            'end_date_utc': 'EndDateUTC',
            'availability': 'Availability',
            'ad_groups': 'AdGroups'
        }
        self._campaign_id = campaign_id
        self._campaign_name = campaign_name
        self._description = description
        self._start_date_utc = start_date_utc
        self._end_date_utc = end_date_utc
        self._availability = availability
        self._ad_groups = ad_groups

    @classmethod
    def from_dict(cls, dikt) -> 'AdvertiserOverviewResponseCampaigns':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AdvertiserOverviewResponse_Campaigns of this AdvertiserOverviewResponseCampaigns.  # noqa: E501
        :rtype: AdvertiserOverviewResponseCampaigns
        """
        return util.deserialize_model(dikt, cls)

    @property
    def campaign_id(self) -> str:
        """Gets the campaign_id of this AdvertiserOverviewResponseCampaigns.

        The ID of the campaign.  # noqa: E501

        :return: The campaign_id of this AdvertiserOverviewResponseCampaigns.
        :rtype: str
        """
        return self._campaign_id

    @campaign_id.setter
    def campaign_id(self, campaign_id: str):
        """Sets the campaign_id of this AdvertiserOverviewResponseCampaigns.

        The ID of the campaign.  # noqa: E501

        :param campaign_id: The campaign_id of this AdvertiserOverviewResponseCampaigns.
        :type campaign_id: str
        """

        self._campaign_id = campaign_id

    @property
    def campaign_name(self) -> str:
        """Gets the campaign_name of this AdvertiserOverviewResponseCampaigns.

        The name of the campaign.  # noqa: E501

        :return: The campaign_name of this AdvertiserOverviewResponseCampaigns.
        :rtype: str
        """
        return self._campaign_name

    @campaign_name.setter
    def campaign_name(self, campaign_name: str):
        """Sets the campaign_name of this AdvertiserOverviewResponseCampaigns.

        The name of the campaign.  # noqa: E501

        :param campaign_name: The campaign_name of this AdvertiserOverviewResponseCampaigns.
        :type campaign_name: str
        """

        self._campaign_name = campaign_name

    @property
    def description(self) -> str:
        """Gets the description of this AdvertiserOverviewResponseCampaigns.

        The description of the campaign.  # noqa: E501

        :return: The description of this AdvertiserOverviewResponseCampaigns.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this AdvertiserOverviewResponseCampaigns.

        The description of the campaign.  # noqa: E501

        :param description: The description of this AdvertiserOverviewResponseCampaigns.
        :type description: str
        """

        self._description = description

    @property
    def start_date_utc(self) -> datetime:
        """Gets the start_date_utc of this AdvertiserOverviewResponseCampaigns.

        The date and time (in UTC) that the campaign should start spending.  # noqa: E501

        :return: The start_date_utc of this AdvertiserOverviewResponseCampaigns.
        :rtype: datetime
        """
        return self._start_date_utc

    @start_date_utc.setter
    def start_date_utc(self, start_date_utc: datetime):
        """Sets the start_date_utc of this AdvertiserOverviewResponseCampaigns.

        The date and time (in UTC) that the campaign should start spending.  # noqa: E501

        :param start_date_utc: The start_date_utc of this AdvertiserOverviewResponseCampaigns.
        :type start_date_utc: datetime
        """

        self._start_date_utc = start_date_utc

    @property
    def end_date_utc(self) -> datetime:
        """Gets the end_date_utc of this AdvertiserOverviewResponseCampaigns.

        The date and time (in UTC) that the campaign should stop spending.  # noqa: E501

        :return: The end_date_utc of this AdvertiserOverviewResponseCampaigns.
        :rtype: datetime
        """
        return self._end_date_utc

    @end_date_utc.setter
    def end_date_utc(self, end_date_utc: datetime):
        """Sets the end_date_utc of this AdvertiserOverviewResponseCampaigns.

        The date and time (in UTC) that the campaign should stop spending.  # noqa: E501

        :param end_date_utc: The end_date_utc of this AdvertiserOverviewResponseCampaigns.
        :type end_date_utc: datetime
        """

        self._end_date_utc = end_date_utc

    @property
    def availability(self) -> str:
        """Gets the availability of this AdvertiserOverviewResponseCampaigns.

        The availability state of the campaign.  # noqa: E501

        :return: The availability of this AdvertiserOverviewResponseCampaigns.
        :rtype: str
        """
        return self._availability

    @availability.setter
    def availability(self, availability: str):
        """Sets the availability of this AdvertiserOverviewResponseCampaigns.

        The availability state of the campaign.  # noqa: E501

        :param availability: The availability of this AdvertiserOverviewResponseCampaigns.
        :type availability: str
        """
        allowed_values = ["Available", "Archived"]  # noqa: E501
        if availability not in allowed_values:
            raise ValueError(
                "Invalid value for `availability` ({0}), must be one of {1}"
                .format(availability, allowed_values)
            )

        self._availability = availability

    @property
    def ad_groups(self) -> List[AdvertiserOverviewResponseAdGroups]:
        """Gets the ad_groups of this AdvertiserOverviewResponseCampaigns.


        :return: The ad_groups of this AdvertiserOverviewResponseCampaigns.
        :rtype: List[AdvertiserOverviewResponseAdGroups]
        """
        return self._ad_groups

    @ad_groups.setter
    def ad_groups(self, ad_groups: List[AdvertiserOverviewResponseAdGroups]):
        """Sets the ad_groups of this AdvertiserOverviewResponseCampaigns.


        :param ad_groups: The ad_groups of this AdvertiserOverviewResponseCampaigns.
        :type ad_groups: List[AdvertiserOverviewResponseAdGroups]
        """

        self._ad_groups = ad_groups
