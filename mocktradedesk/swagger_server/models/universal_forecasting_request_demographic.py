# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class UniversalForecastingRequestDemographic(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, start_age: str=None, end_age: str=None, gender: str=None):  # noqa: E501
        """UniversalForecastingRequestDemographic - a model defined in Swagger

        :param start_age: The start_age of this UniversalForecastingRequestDemographic.  # noqa: E501
        :type start_age: str
        :param end_age: The end_age of this UniversalForecastingRequestDemographic.  # noqa: E501
        :type end_age: str
        :param gender: The gender of this UniversalForecastingRequestDemographic.  # noqa: E501
        :type gender: str
        """
        self.swagger_types = {
            'start_age': str,
            'end_age': str,
            'gender': str
        }

        self.attribute_map = {
            'start_age': 'StartAge',
            'end_age': 'EndAge',
            'gender': 'Gender'
        }
        self._start_age = start_age
        self._end_age = end_age
        self._gender = gender

    @classmethod
    def from_dict(cls, dikt) -> 'UniversalForecastingRequestDemographic':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UniversalForecastingRequest_Demographic of this UniversalForecastingRequestDemographic.  # noqa: E501
        :rtype: UniversalForecastingRequestDemographic
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start_age(self) -> str:
        """Gets the start_age of this UniversalForecastingRequestDemographic.

        The minimum age to be targeted.  # noqa: E501

        :return: The start_age of this UniversalForecastingRequestDemographic.
        :rtype: str
        """
        return self._start_age

    @start_age.setter
    def start_age(self, start_age: str):
        """Sets the start_age of this UniversalForecastingRequestDemographic.

        The minimum age to be targeted.  # noqa: E501

        :param start_age: The start_age of this UniversalForecastingRequestDemographic.
        :type start_age: str
        """

        self._start_age = start_age

    @property
    def end_age(self) -> str:
        """Gets the end_age of this UniversalForecastingRequestDemographic.

        The maximum age to be targeted.  # noqa: E501

        :return: The end_age of this UniversalForecastingRequestDemographic.
        :rtype: str
        """
        return self._end_age

    @end_age.setter
    def end_age(self, end_age: str):
        """Sets the end_age of this UniversalForecastingRequestDemographic.

        The maximum age to be targeted.  # noqa: E501

        :param end_age: The end_age of this UniversalForecastingRequestDemographic.
        :type end_age: str
        """

        self._end_age = end_age

    @property
    def gender(self) -> str:
        """Gets the gender of this UniversalForecastingRequestDemographic.

        The gender to be targeted.  # noqa: E501

        :return: The gender of this UniversalForecastingRequestDemographic.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender: str):
        """Sets the gender of this UniversalForecastingRequestDemographic.

        The gender to be targeted.  # noqa: E501

        :param gender: The gender of this UniversalForecastingRequestDemographic.
        :type gender: str
        """

        self._gender = gender
