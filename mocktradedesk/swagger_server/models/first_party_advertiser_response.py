# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.first_party_advertiser_response_result import FirstPartyAdvertiserResponseResult  # noqa: F401,E501
from swagger_server import util


class FirstPartyAdvertiserResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, result: List[FirstPartyAdvertiserResponseResult]=None, result_count: int=None, total_filtered_count: int=None, total_unfiltered_count: int=None):  # noqa: E501
        """FirstPartyAdvertiserResponse - a model defined in Swagger

        :param result: The result of this FirstPartyAdvertiserResponse.  # noqa: E501
        :type result: List[FirstPartyAdvertiserResponseResult]
        :param result_count: The result_count of this FirstPartyAdvertiserResponse.  # noqa: E501
        :type result_count: int
        :param total_filtered_count: The total_filtered_count of this FirstPartyAdvertiserResponse.  # noqa: E501
        :type total_filtered_count: int
        :param total_unfiltered_count: The total_unfiltered_count of this FirstPartyAdvertiserResponse.  # noqa: E501
        :type total_unfiltered_count: int
        """
        self.swagger_types = {
            'result': List[FirstPartyAdvertiserResponseResult],
            'result_count': int,
            'total_filtered_count': int,
            'total_unfiltered_count': int
        }

        self.attribute_map = {
            'result': 'Result',
            'result_count': 'ResultCount',
            'total_filtered_count': 'TotalFilteredCount',
            'total_unfiltered_count': 'TotalUnfilteredCount'
        }
        self._result = result
        self._result_count = result_count
        self._total_filtered_count = total_filtered_count
        self._total_unfiltered_count = total_unfiltered_count

    @classmethod
    def from_dict(cls, dikt) -> 'FirstPartyAdvertiserResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The FirstPartyAdvertiserResponse of this FirstPartyAdvertiserResponse.  # noqa: E501
        :rtype: FirstPartyAdvertiserResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def result(self) -> List[FirstPartyAdvertiserResponseResult]:
        """Gets the result of this FirstPartyAdvertiserResponse.


        :return: The result of this FirstPartyAdvertiserResponse.
        :rtype: List[FirstPartyAdvertiserResponseResult]
        """
        return self._result

    @result.setter
    def result(self, result: List[FirstPartyAdvertiserResponseResult]):
        """Sets the result of this FirstPartyAdvertiserResponse.


        :param result: The result of this FirstPartyAdvertiserResponse.
        :type result: List[FirstPartyAdvertiserResponseResult]
        """

        self._result = result

    @property
    def result_count(self) -> int:
        """Gets the result_count of this FirstPartyAdvertiserResponse.


        :return: The result_count of this FirstPartyAdvertiserResponse.
        :rtype: int
        """
        return self._result_count

    @result_count.setter
    def result_count(self, result_count: int):
        """Sets the result_count of this FirstPartyAdvertiserResponse.


        :param result_count: The result_count of this FirstPartyAdvertiserResponse.
        :type result_count: int
        """

        self._result_count = result_count

    @property
    def total_filtered_count(self) -> int:
        """Gets the total_filtered_count of this FirstPartyAdvertiserResponse.


        :return: The total_filtered_count of this FirstPartyAdvertiserResponse.
        :rtype: int
        """
        return self._total_filtered_count

    @total_filtered_count.setter
    def total_filtered_count(self, total_filtered_count: int):
        """Sets the total_filtered_count of this FirstPartyAdvertiserResponse.


        :param total_filtered_count: The total_filtered_count of this FirstPartyAdvertiserResponse.
        :type total_filtered_count: int
        """

        self._total_filtered_count = total_filtered_count

    @property
    def total_unfiltered_count(self) -> int:
        """Gets the total_unfiltered_count of this FirstPartyAdvertiserResponse.


        :return: The total_unfiltered_count of this FirstPartyAdvertiserResponse.
        :rtype: int
        """
        return self._total_unfiltered_count

    @total_unfiltered_count.setter
    def total_unfiltered_count(self, total_unfiltered_count: int):
        """Sets the total_unfiltered_count of this FirstPartyAdvertiserResponse.


        :param total_unfiltered_count: The total_unfiltered_count of this FirstPartyAdvertiserResponse.
        :type total_unfiltered_count: int
        """

        self._total_unfiltered_count = total_unfiltered_count
