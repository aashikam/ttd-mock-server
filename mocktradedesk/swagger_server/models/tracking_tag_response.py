# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class TrackingTagResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, advertiser_id: str=None, container_tag_body: str=None, currency: str=None, data_event_type_id: str=None, first_party_data_id: int=None, hit_count7_day: int=None, household_enabled: bool=None, i_frame_tag: str=None, image_tag: str=None, offline_data_provider_id: str=None, revenue: str=None, tag_redirect_uri: str=None, tracking_tag_availability: str=None, tracking_tag_category: str=None, tracking_tag_id: str=None, tracking_tag_location: str=None, tracking_tag_name: str=None, tracking_tag_type: str=None, universal_pixel_name: str=None):  # noqa: E501
        """TrackingTagResponse - a model defined in Swagger

        :param advertiser_id: The advertiser_id of this TrackingTagResponse.  # noqa: E501
        :type advertiser_id: str
        :param container_tag_body: The container_tag_body of this TrackingTagResponse.  # noqa: E501
        :type container_tag_body: str
        :param currency: The currency of this TrackingTagResponse.  # noqa: E501
        :type currency: str
        :param data_event_type_id: The data_event_type_id of this TrackingTagResponse.  # noqa: E501
        :type data_event_type_id: str
        :param first_party_data_id: The first_party_data_id of this TrackingTagResponse.  # noqa: E501
        :type first_party_data_id: int
        :param hit_count7_day: The hit_count7_day of this TrackingTagResponse.  # noqa: E501
        :type hit_count7_day: int
        :param household_enabled: The household_enabled of this TrackingTagResponse.  # noqa: E501
        :type household_enabled: bool
        :param i_frame_tag: The i_frame_tag of this TrackingTagResponse.  # noqa: E501
        :type i_frame_tag: str
        :param image_tag: The image_tag of this TrackingTagResponse.  # noqa: E501
        :type image_tag: str
        :param offline_data_provider_id: The offline_data_provider_id of this TrackingTagResponse.  # noqa: E501
        :type offline_data_provider_id: str
        :param revenue: The revenue of this TrackingTagResponse.  # noqa: E501
        :type revenue: str
        :param tag_redirect_uri: The tag_redirect_uri of this TrackingTagResponse.  # noqa: E501
        :type tag_redirect_uri: str
        :param tracking_tag_availability: The tracking_tag_availability of this TrackingTagResponse.  # noqa: E501
        :type tracking_tag_availability: str
        :param tracking_tag_category: The tracking_tag_category of this TrackingTagResponse.  # noqa: E501
        :type tracking_tag_category: str
        :param tracking_tag_id: The tracking_tag_id of this TrackingTagResponse.  # noqa: E501
        :type tracking_tag_id: str
        :param tracking_tag_location: The tracking_tag_location of this TrackingTagResponse.  # noqa: E501
        :type tracking_tag_location: str
        :param tracking_tag_name: The tracking_tag_name of this TrackingTagResponse.  # noqa: E501
        :type tracking_tag_name: str
        :param tracking_tag_type: The tracking_tag_type of this TrackingTagResponse.  # noqa: E501
        :type tracking_tag_type: str
        :param universal_pixel_name: The universal_pixel_name of this TrackingTagResponse.  # noqa: E501
        :type universal_pixel_name: str
        """
        self.swagger_types = {
            'advertiser_id': str,
            'container_tag_body': str,
            'currency': str,
            'data_event_type_id': str,
            'first_party_data_id': int,
            'hit_count7_day': int,
            'household_enabled': bool,
            'i_frame_tag': str,
            'image_tag': str,
            'offline_data_provider_id': str,
            'revenue': str,
            'tag_redirect_uri': str,
            'tracking_tag_availability': str,
            'tracking_tag_category': str,
            'tracking_tag_id': str,
            'tracking_tag_location': str,
            'tracking_tag_name': str,
            'tracking_tag_type': str,
            'universal_pixel_name': str
        }

        self.attribute_map = {
            'advertiser_id': 'AdvertiserId',
            'container_tag_body': 'ContainerTagBody',
            'currency': 'Currency',
            'data_event_type_id': 'DataEventTypeId',
            'first_party_data_id': 'FirstPartyDataId',
            'hit_count7_day': 'HitCount7Day',
            'household_enabled': 'HouseholdEnabled',
            'i_frame_tag': 'IFrameTag',
            'image_tag': 'ImageTag',
            'offline_data_provider_id': 'OfflineDataProviderId',
            'revenue': 'Revenue',
            'tag_redirect_uri': 'TagRedirectUri',
            'tracking_tag_availability': 'TrackingTagAvailability',
            'tracking_tag_category': 'TrackingTagCategory',
            'tracking_tag_id': 'TrackingTagId',
            'tracking_tag_location': 'TrackingTagLocation',
            'tracking_tag_name': 'TrackingTagName',
            'tracking_tag_type': 'TrackingTagType',
            'universal_pixel_name': 'UniversalPixelName'
        }
        self._advertiser_id = advertiser_id
        self._container_tag_body = container_tag_body
        self._currency = currency
        self._data_event_type_id = data_event_type_id
        self._first_party_data_id = first_party_data_id
        self._hit_count7_day = hit_count7_day
        self._household_enabled = household_enabled
        self._i_frame_tag = i_frame_tag
        self._image_tag = image_tag
        self._offline_data_provider_id = offline_data_provider_id
        self._revenue = revenue
        self._tag_redirect_uri = tag_redirect_uri
        self._tracking_tag_availability = tracking_tag_availability
        self._tracking_tag_category = tracking_tag_category
        self._tracking_tag_id = tracking_tag_id
        self._tracking_tag_location = tracking_tag_location
        self._tracking_tag_name = tracking_tag_name
        self._tracking_tag_type = tracking_tag_type
        self._universal_pixel_name = universal_pixel_name

    @classmethod
    def from_dict(cls, dikt) -> 'TrackingTagResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TrackingTagResponse of this TrackingTagResponse.  # noqa: E501
        :rtype: TrackingTagResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advertiser_id(self) -> str:
        """Gets the advertiser_id of this TrackingTagResponse.

        The platform ID of the advertiser that owns this tracking tag.  # noqa: E501

        :return: The advertiser_id of this TrackingTagResponse.
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id: str):
        """Sets the advertiser_id of this TrackingTagResponse.

        The platform ID of the advertiser that owns this tracking tag.  # noqa: E501

        :param advertiser_id: The advertiser_id of this TrackingTagResponse.
        :type advertiser_id: str
        """

        self._advertiser_id = advertiser_id

    @property
    def container_tag_body(self) -> str:
        """Gets the container_tag_body of this TrackingTagResponse.

        Additional HTML to be inserted in the IFrame version of the tracking tag. Use this to add additional pixels that will be invoked when this tag is hit.  # noqa: E501

        :return: The container_tag_body of this TrackingTagResponse.
        :rtype: str
        """
        return self._container_tag_body

    @container_tag_body.setter
    def container_tag_body(self, container_tag_body: str):
        """Sets the container_tag_body of this TrackingTagResponse.

        Additional HTML to be inserted in the IFrame version of the tracking tag. Use this to add additional pixels that will be invoked when this tag is hit.  # noqa: E501

        :param container_tag_body: The container_tag_body of this TrackingTagResponse.
        :type container_tag_body: str
        """

        self._container_tag_body = container_tag_body

    @property
    def currency(self) -> str:
        """Gets the currency of this TrackingTagResponse.

        The units of currency of the Revenue property. Supports any value and is used for conversion reporting.  # noqa: E501

        :return: The currency of this TrackingTagResponse.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency: str):
        """Sets the currency of this TrackingTagResponse.

        The units of currency of the Revenue property. Supports any value and is used for conversion reporting.  # noqa: E501

        :param currency: The currency of this TrackingTagResponse.
        :type currency: str
        """

        self._currency = currency

    @property
    def data_event_type_id(self) -> str:
        """Gets the data_event_type_id of this TrackingTagResponse.

        The ID associated with an event, such as AddToCart, Purchase, or ViewItem.  # noqa: E501

        :return: The data_event_type_id of this TrackingTagResponse.
        :rtype: str
        """
        return self._data_event_type_id

    @data_event_type_id.setter
    def data_event_type_id(self, data_event_type_id: str):
        """Sets the data_event_type_id of this TrackingTagResponse.

        The ID associated with an event, such as AddToCart, Purchase, or ViewItem.  # noqa: E501

        :param data_event_type_id: The data_event_type_id of this TrackingTagResponse.
        :type data_event_type_id: str
        """

        self._data_event_type_id = data_event_type_id

    @property
    def first_party_data_id(self) -> int:
        """Gets the first_party_data_id of this TrackingTagResponse.

        The first-party data ID for this tracking tag. Used in data groups to target collected data.  # noqa: E501

        :return: The first_party_data_id of this TrackingTagResponse.
        :rtype: int
        """
        return self._first_party_data_id

    @first_party_data_id.setter
    def first_party_data_id(self, first_party_data_id: int):
        """Sets the first_party_data_id of this TrackingTagResponse.

        The first-party data ID for this tracking tag. Used in data groups to target collected data.  # noqa: E501

        :param first_party_data_id: The first_party_data_id of this TrackingTagResponse.
        :type first_party_data_id: int
        """

        self._first_party_data_id = first_party_data_id

    @property
    def hit_count7_day(self) -> int:
        """Gets the hit_count7_day of this TrackingTagResponse.

        Number of hits received in the past 7 days.  # noqa: E501

        :return: The hit_count7_day of this TrackingTagResponse.
        :rtype: int
        """
        return self._hit_count7_day

    @hit_count7_day.setter
    def hit_count7_day(self, hit_count7_day: int):
        """Sets the hit_count7_day of this TrackingTagResponse.

        Number of hits received in the past 7 days.  # noqa: E501

        :param hit_count7_day: The hit_count7_day of this TrackingTagResponse.
        :type hit_count7_day: int
        """

        self._hit_count7_day = hit_count7_day

    @property
    def household_enabled(self) -> bool:
        """Gets the household_enabled of this TrackingTagResponse.

        Indicates whether household targeting is enabled for this tracking tag.  # noqa: E501

        :return: The household_enabled of this TrackingTagResponse.
        :rtype: bool
        """
        return self._household_enabled

    @household_enabled.setter
    def household_enabled(self, household_enabled: bool):
        """Sets the household_enabled of this TrackingTagResponse.

        Indicates whether household targeting is enabled for this tracking tag.  # noqa: E501

        :param household_enabled: The household_enabled of this TrackingTagResponse.
        :type household_enabled: bool
        """

        self._household_enabled = household_enabled

    @property
    def i_frame_tag(self) -> str:
        """Gets the i_frame_tag of this TrackingTagResponse.

        The IFrame tag.  # noqa: E501

        :return: The i_frame_tag of this TrackingTagResponse.
        :rtype: str
        """
        return self._i_frame_tag

    @i_frame_tag.setter
    def i_frame_tag(self, i_frame_tag: str):
        """Sets the i_frame_tag of this TrackingTagResponse.

        The IFrame tag.  # noqa: E501

        :param i_frame_tag: The i_frame_tag of this TrackingTagResponse.
        :type i_frame_tag: str
        """

        self._i_frame_tag = i_frame_tag

    @property
    def image_tag(self) -> str:
        """Gets the image_tag of this TrackingTagResponse.

        The image tag.  # noqa: E501

        :return: The image_tag of this TrackingTagResponse.
        :rtype: str
        """
        return self._image_tag

    @image_tag.setter
    def image_tag(self, image_tag: str):
        """Sets the image_tag of this TrackingTagResponse.

        The image tag.  # noqa: E501

        :param image_tag: The image_tag of this TrackingTagResponse.
        :type image_tag: str
        """

        self._image_tag = image_tag

    @property
    def offline_data_provider_id(self) -> str:
        """Gets the offline_data_provider_id of this TrackingTagResponse.

        The name of the offline data provider if this is an offline attribution tracking tag.  # noqa: E501

        :return: The offline_data_provider_id of this TrackingTagResponse.
        :rtype: str
        """
        return self._offline_data_provider_id

    @offline_data_provider_id.setter
    def offline_data_provider_id(self, offline_data_provider_id: str):
        """Sets the offline_data_provider_id of this TrackingTagResponse.

        The name of the offline data provider if this is an offline attribution tracking tag.  # noqa: E501

        :param offline_data_provider_id: The offline_data_provider_id of this TrackingTagResponse.
        :type offline_data_provider_id: str
        """

        self._offline_data_provider_id = offline_data_provider_id

    @property
    def revenue(self) -> str:
        """Gets the revenue of this TrackingTagResponse.

        The amount of revenue a single hit to this tag generates. Can be a macro for dynamic contexts.  # noqa: E501

        :return: The revenue of this TrackingTagResponse.
        :rtype: str
        """
        return self._revenue

    @revenue.setter
    def revenue(self, revenue: str):
        """Sets the revenue of this TrackingTagResponse.

        The amount of revenue a single hit to this tag generates. Can be a macro for dynamic contexts.  # noqa: E501

        :param revenue: The revenue of this TrackingTagResponse.
        :type revenue: str
        """

        self._revenue = revenue

    @property
    def tag_redirect_uri(self) -> str:
        """Gets the tag_redirect_uri of this TrackingTagResponse.

        The tag redirect URI.  # noqa: E501

        :return: The tag_redirect_uri of this TrackingTagResponse.
        :rtype: str
        """
        return self._tag_redirect_uri

    @tag_redirect_uri.setter
    def tag_redirect_uri(self, tag_redirect_uri: str):
        """Sets the tag_redirect_uri of this TrackingTagResponse.

        The tag redirect URI.  # noqa: E501

        :param tag_redirect_uri: The tag_redirect_uri of this TrackingTagResponse.
        :type tag_redirect_uri: str
        """

        self._tag_redirect_uri = tag_redirect_uri

    @property
    def tracking_tag_availability(self) -> str:
        """Gets the tracking_tag_availability of this TrackingTagResponse.

        The availability of the TrackingTag.  # noqa: E501

        :return: The tracking_tag_availability of this TrackingTagResponse.
        :rtype: str
        """
        return self._tracking_tag_availability

    @tracking_tag_availability.setter
    def tracking_tag_availability(self, tracking_tag_availability: str):
        """Sets the tracking_tag_availability of this TrackingTagResponse.

        The availability of the TrackingTag.  # noqa: E501

        :param tracking_tag_availability: The tracking_tag_availability of this TrackingTagResponse.
        :type tracking_tag_availability: str
        """
        allowed_values = ["Available", "Archived"]  # noqa: E501
        if tracking_tag_availability not in allowed_values:
            raise ValueError(
                "Invalid value for `tracking_tag_availability` ({0}), must be one of {1}"
                .format(tracking_tag_availability, allowed_values)
            )

        self._tracking_tag_availability = tracking_tag_availability

    @property
    def tracking_tag_category(self) -> str:
        """Gets the tracking_tag_category of this TrackingTagResponse.

        The category of the TrackingTag.  # noqa: E501

        :return: The tracking_tag_category of this TrackingTagResponse.
        :rtype: str
        """
        return self._tracking_tag_category

    @tracking_tag_category.setter
    def tracking_tag_category(self, tracking_tag_category: str):
        """Sets the tracking_tag_category of this TrackingTagResponse.

        The category of the TrackingTag.  # noqa: E501

        :param tracking_tag_category: The tracking_tag_category of this TrackingTagResponse.
        :type tracking_tag_category: str
        """
        allowed_values = ["StaticTag", "AppEventTrackerTag", "UniversalPixelTag", "OfflineTag"]  # noqa: E501
        if tracking_tag_category not in allowed_values:
            raise ValueError(
                "Invalid value for `tracking_tag_category` ({0}), must be one of {1}"
                .format(tracking_tag_category, allowed_values)
            )

        self._tracking_tag_category = tracking_tag_category

    @property
    def tracking_tag_id(self) -> str:
        """Gets the tracking_tag_id of this TrackingTagResponse.

        The ID of the tracking tag. Ignored on creation; assigned by the system.  # noqa: E501

        :return: The tracking_tag_id of this TrackingTagResponse.
        :rtype: str
        """
        return self._tracking_tag_id

    @tracking_tag_id.setter
    def tracking_tag_id(self, tracking_tag_id: str):
        """Sets the tracking_tag_id of this TrackingTagResponse.

        The ID of the tracking tag. Ignored on creation; assigned by the system.  # noqa: E501

        :param tracking_tag_id: The tracking_tag_id of this TrackingTagResponse.
        :type tracking_tag_id: str
        """

        self._tracking_tag_id = tracking_tag_id

    @property
    def tracking_tag_location(self) -> str:
        """Gets the tracking_tag_location of this TrackingTagResponse.

        The location where this tracking tag will be deployed.  # noqa: E501

        :return: The tracking_tag_location of this TrackingTagResponse.
        :rtype: str
        """
        return self._tracking_tag_location

    @tracking_tag_location.setter
    def tracking_tag_location(self, tracking_tag_location: str):
        """Sets the tracking_tag_location of this TrackingTagResponse.

        The location where this tracking tag will be deployed.  # noqa: E501

        :param tracking_tag_location: The tracking_tag_location of this TrackingTagResponse.
        :type tracking_tag_location: str
        """

        self._tracking_tag_location = tracking_tag_location

    @property
    def tracking_tag_name(self) -> str:
        """Gets the tracking_tag_name of this TrackingTagResponse.

        The name of the tracking tag.  # noqa: E501

        :return: The tracking_tag_name of this TrackingTagResponse.
        :rtype: str
        """
        return self._tracking_tag_name

    @tracking_tag_name.setter
    def tracking_tag_name(self, tracking_tag_name: str):
        """Sets the tracking_tag_name of this TrackingTagResponse.

        The name of the tracking tag.  # noqa: E501

        :param tracking_tag_name: The tracking_tag_name of this TrackingTagResponse.
        :type tracking_tag_name: str
        """

        self._tracking_tag_name = tracking_tag_name

    @property
    def tracking_tag_type(self) -> str:
        """Gets the tracking_tag_type of this TrackingTagResponse.

        The type of the tracking tag.  # noqa: E501

        :return: The tracking_tag_type of this TrackingTagResponse.
        :rtype: str
        """
        return self._tracking_tag_type

    @tracking_tag_type.setter
    def tracking_tag_type(self, tracking_tag_type: str):
        """Sets the tracking_tag_type of this TrackingTagResponse.

        The type of the tracking tag.  # noqa: E501

        :param tracking_tag_type: The tracking_tag_type of this TrackingTagResponse.
        :type tracking_tag_type: str
        """
        allowed_values = ["Impression", "Retargeting", "Conversion"]  # noqa: E501
        if tracking_tag_type not in allowed_values:
            raise ValueError(
                "Invalid value for `tracking_tag_type` ({0}), must be one of {1}"
                .format(tracking_tag_type, allowed_values)
            )

        self._tracking_tag_type = tracking_tag_type

    @property
    def universal_pixel_name(self) -> str:
        """Gets the universal_pixel_name of this TrackingTagResponse.

        The name of the universal pixel associated with this tracking tag.  # noqa: E501

        :return: The universal_pixel_name of this TrackingTagResponse.
        :rtype: str
        """
        return self._universal_pixel_name

    @universal_pixel_name.setter
    def universal_pixel_name(self, universal_pixel_name: str):
        """Sets the universal_pixel_name of this TrackingTagResponse.

        The name of the universal pixel associated with this tracking tag.  # noqa: E501

        :param universal_pixel_name: The universal_pixel_name of this TrackingTagResponse.
        :type universal_pixel_name: str
        """

        self._universal_pixel_name = universal_pixel_name
